@using BlazeQuartz.Core.Models
@using MudBlazor
@inject UserRoleService UserRoleService

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="editUser.Username"
                      Label="Username"
                      Immediate="true"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense"
                      Clearable="true"
                      Required="true"
                      Class="mt-2" />
        <MudTextField @bind-Value="editUser.Password"
                      Label="Password"
                      InputType="InputType.Password"
                      Immediate="true"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense"
                      Clearable="true"
                      Required="true"
                      Class="mt-2" />
        <MudSelect Variant="Variant.Outlined"
                   Margin="Margin.Dense"
                   AnchorOrigin="Origin.BottomCenter"
                   T="int"
                   @bind-Value="editUser.Role_Id"
                   Label="Role"
                   Required="true"
                   Class="mt-2">
            <MudSelectItem Value="0">Select Role</MudSelectItem>
            @foreach (var role in roles)
            {
                <MudSelectItem Value="@role.Role_Id">@role.Role_Name</MudSelectItem>
            }
        </MudSelect>


    </DialogContent>
    <DialogActions>
        <MudButton OnClick="OnCancel" Variant="Variant.Filled"
                   Style="width: 100px;">Cancel</MudButton>
        <MudButton Style="width: 100px;" Color="Color.Primary" Variant="Variant.Filled" OnClick="OnSave">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Inject] private ISnackbar Snackbar { get; set; } = null!;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public User? user { get; set; }

    private User editUser = new();
    private List<Role> roles = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            roles = (await UserRoleService.GetAllRoles()).ToList();
            if (user != null)
            {
                editUser = new User
                {
                    UserId = user.UserId,
                    Username = user.Username,
                    Password = user.Password,
                    Role_Id = user.Role_Id
                };
            }
            else
            {
                editUser = new User();
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading roles: {ex.Message}", Severity.Error);
        }
    }

    void OnCancel() => MudDialog.Cancel();

    void OnSave()
    {
        if (String.IsNullOrWhiteSpace(editUser.Username))
        {
            Snackbar.Add("Username is required", Severity.Error);
            return;
        }

        if (String.IsNullOrWhiteSpace(editUser.Password))
        {
            Snackbar.Add("Password is required", Severity.Error);
            return;
        }

        if (editUser.Role_Id == 0)
        {
            Snackbar.Add("Role is required", Severity.Error);
            return;
        }
        MudDialog.Close(DialogResult.Ok(editUser));
    }
}